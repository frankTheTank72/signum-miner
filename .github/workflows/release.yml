name: Draft Release Build

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag (e.g. v1.8.0)'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            feature: simd_sse2
            output: signum-miner-sse2
          - target: x86_64-unknown-linux-gnu
            feature: simd_avx
            output: signum-miner-avx
          - target: x86_64-unknown-linux-gnu
            feature: simd_avx2
            output: signum-miner-avx2
          - target: x86_64-unknown-linux-gnu
            feature: simd_avx512f
            output: signum-miner-avx512f
          - target: x86_64-pc-windows-gnu
            feature: simd_sse2
            output: signum-miner-sse2.exe
          - target: x86_64-pc-windows-gnu
            feature: simd_avx
            output: signum-miner-avx.exe
          - target: x86_64-pc-windows-gnu
            feature: simd_avx2
            output: signum-miner-avx2.exe
          - target: x86_64-pc-windows-gnu
            feature: simd_avx512f
            output: signum-miner-avx512f.exe
          - target: aarch64-unknown-linux-gnu
            feature: neon
            output: signum-miner-aarch64-neon

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Install mingw-w64 for windres
        if: contains(matrix.target, 'windows-gnu')
        run: sudo apt-get update && sudo apt-get install -y binutils-mingw-w64

      - name: Build with cross and feature
        run: cross build --release --target ${{ matrix.target }}  --no-default-features --features ${{ matrix.feature }}

      - name: Rename binary
        run: |
          ext=""
          [[ "${{ matrix.target }}" == *windows* ]] && ext=".exe"
          cp target/${{ matrix.target }}/release/signum-miner${ext} ${{ matrix.output }}

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.output }}
          path: ${{ matrix.output }}
        if: success()

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create git tag
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag ${{ github.event.inputs.release_tag }}
          git push origin ${{ github.event.inputs.release_tag }}

      - name: Flatten artifacts
        run: |
          mkdir release_files
          find ./artifacts -type f -exec cp {} release_files/ \;


      - name: Add config.yaml to release_files
        run: cp config.yaml release_files/config.yaml

      - name: Create draft GitHub release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          tag_name: ${{ github.event.inputs.release_tag }}
          files: |
            release_files/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
